{"ast":null,"code":"var _jsxFileName = \"/Users/BerkanTugsuz/Documents/Portfolio/src/WorldClock.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [{\n  name: 'NY',\n  timezone: 'America/New_York',\n  icon: 'ðŸ—½'\n}, {\n  name: 'LDN',\n  timezone: 'Europe/London',\n  icon: 'ðŸ‡¬ðŸ‡§'\n}, {\n  name: 'TKYO',\n  timezone: 'Asia/Tokyo',\n  icon: 'ðŸ—¼'\n}, {\n  name: 'PAR',\n  timezone: 'Europe/Paris',\n  icon: 'ðŸ‡«ðŸ‡·'\n} // Updated from Sydney to Paris\n];\nconst WorldClock = () => {\n  _s();\n  const [times, setTimes] = useState([]);\n  useEffect(() => {\n    const updateTime = () => {\n      const newTimes = cities.map(city => {\n        const date = new Date().toLocaleTimeString('en-US', {\n          timeZone: city.timezone\n        });\n        return {\n          name: city.name,\n          time: date,\n          icon: city.icon\n        };\n      });\n      setTimes(newTimes);\n    };\n    updateTime();\n    const interval = setInterval(updateTime, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"world-clock\",\n    children: times.map((timeInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clock\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: timeInfo.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: timeInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ExactTime\",\n        children: timeInfo.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldClock, \"81bowZj0s+OEa3RiisSpRGrXe+U=\");\n_c = WorldClock;\nexport default WorldClock;\nvar _c;\n$RefreshReg$(_c, \"WorldClock\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","cities","name","timezone","icon","WorldClock","_s","times","setTimes","updateTime","newTimes","map","city","date","Date","toLocaleTimeString","timeZone","time","interval","setInterval","clearInterval","className","children","timeInfo","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/BerkanTugsuz/Documents/Portfolio/src/WorldClock.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst cities = [\n  { name: 'NY', timezone: 'America/New_York', icon: 'ðŸ—½' },\n  { name: 'LDN', timezone: 'Europe/London', icon: 'ðŸ‡¬ðŸ‡§' },\n  { name: 'TKYO', timezone: 'Asia/Tokyo', icon: 'ðŸ—¼' },\n  { name: 'PAR', timezone: 'Europe/Paris', icon: 'ðŸ‡«ðŸ‡·' }, // Updated from Sydney to Paris\n];\n\nconst WorldClock = () => {\n  const [times, setTimes] = useState([]);\n\n  useEffect(() => {\n    const updateTime = () => {\n      const newTimes = cities.map(city => {\n        const date = new Date().toLocaleTimeString('en-US', { timeZone: city.timezone });\n        return {\n          name: city.name,\n          time: date,\n          icon: city.icon,\n        };\n      });\n      setTimes(newTimes);\n    };\n\n    updateTime();\n    const interval = setInterval(updateTime, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <div className=\"world-clock\">\n      {times.map((timeInfo, index) => (\n        <div className=\"clock\" key={index}>\n          <div className=\"icon\">{timeInfo.icon}</div>\n          <h3>{timeInfo.name}</h3>\n          <div className='ExactTime'>{timeInfo.time}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default WorldClock;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,IAAI;EAAEC,QAAQ,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAK,CAAC,EACxD;EAAEF,IAAI,EAAE,KAAK;EAAEC,QAAQ,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAO,CAAC,EACxD;EAAEF,IAAI,EAAE,MAAM;EAAEC,QAAQ,EAAE,YAAY;EAAEC,IAAI,EAAE;AAAK,CAAC,EACpD;EAAEF,IAAI,EAAE,KAAK;EAAEC,QAAQ,EAAE,cAAc;EAAEC,IAAI,EAAE;AAAO,CAAC,CAAE;AAAA,CAC1D;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,QAAQ,GAAGT,MAAM,CAACU,GAAG,CAACC,IAAI,IAAI;QAClC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;UAAEC,QAAQ,EAAEJ,IAAI,CAACT;QAAS,CAAC,CAAC;QAChF,OAAO;UACLD,IAAI,EAAEU,IAAI,CAACV,IAAI;UACfe,IAAI,EAAEJ,IAAI;UACVT,IAAI,EAAEQ,IAAI,CAACR;QACb,CAAC;MACH,CAAC,CAAC;MACFI,QAAQ,CAACE,QAAQ,CAAC;IACpB,CAAC;IAEDD,UAAU,CAAC,CAAC;IACZ,MAAMS,QAAQ,GAAGC,WAAW,CAACV,UAAU,EAAE,IAAI,CAAC;IAC9C,OAAO,MAAMW,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAKqB,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzBf,KAAK,CAACI,GAAG,CAAC,CAACY,QAAQ,EAAEC,KAAK,kBACzBxB,OAAA;MAAKqB,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBtB,OAAA;QAAKqB,SAAS,EAAC,MAAM;QAAAC,QAAA,EAAEC,QAAQ,CAACnB;MAAI;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3C5B,OAAA;QAAAsB,QAAA,EAAKC,QAAQ,CAACrB;MAAI;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB5B,OAAA;QAAKqB,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAEC,QAAQ,CAACN;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,GAHtBJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI5B,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAhCID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAkChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}