{"ast":null,"code":"var _jsxFileName = \"/Users/BerkanTugsuz/Documents/Portfolio/src/components/Project.js\";\nimport React from 'react';\nimport './Projects.css'; // Your styles for the projects section\nimport reputeaidevScreenshot from '../assets/Screenshot.png'; // Adjust this path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectsData = [{\n  title: \"Reputeaidev\",\n  description: \"A platform that automates the collection and display of authentic customer testimonials. It simplifies feedback gathering and presents reviews in an organized format, making it easy for businesses to showcase their customer experiences.\",\n  imageUrl: reputeaidevScreenshot,\n  // Use the imported image\n  liveUrl: \"https://reputeaidev.vercel.app\",\n  techStack: [\"React\", \"CSS\", \"JavaScript\", \"Vercel\"]\n}\n// Add more projects here\n];\nexport default function Projects() {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"projectsName\",\n    className: \"ProjectsSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProjectsGrid\",\n      children: projectsData.map((project, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProjectCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.liveUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.imageUrl,\n            alt: `${project.title} Screenshot`,\n            className: \"ProjectImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ProjectInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ProjectDescription\",\n            children: [\" \", project.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TechStack\",\n            children: project.techStack.map((tech, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"TechTag\",\n              children: tech\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","reputeaidevScreenshot","jsxDEV","_jsxDEV","projectsData","title","description","imageUrl","liveUrl","techStack","Projects","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","project","index","href","target","rel","src","alt","tech","i","_c","$RefreshReg$"],"sources":["/Users/BerkanTugsuz/Documents/Portfolio/src/components/Project.js"],"sourcesContent":["import React from 'react';\nimport './Projects.css'; // Your styles for the projects section\nimport reputeaidevScreenshot from '../assets/Screenshot.png'; // Adjust this path as needed\n\nconst projectsData = [\n  {\n    title: \"Reputeaidev\",\n    description: \"A platform that automates the collection and display of authentic customer testimonials. It simplifies feedback gathering and presents reviews in an organized format, making it easy for businesses to showcase their customer experiences.\",\n    imageUrl: reputeaidevScreenshot, // Use the imported image\n    liveUrl: \"https://reputeaidev.vercel.app\",\n    techStack: [\"React\", \"CSS\", \"JavaScript\", \"Vercel\"]\n  },\n  // Add more projects here\n];\n\nexport default function Projects() {\n  return (\n    <section id=\"projectsName\" className=\"ProjectsSection\">\n      <h2>Projects</h2>\n      <div className=\"ProjectsGrid\">\n        {projectsData.map((project, index) => (\n          <div className=\"ProjectCard\" key={index}>\n            <a href={project.liveUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src={project.imageUrl} alt={`${project.title} Screenshot`} className=\"ProjectImage\"/>\n            </a>\n            <div className=\"ProjectInfo\">\n              <h3>{project.title}</h3>\n              <div className='ProjectDescription'> {project.description}</div>\n              <div className=\"TechStack\">\n                {project.techStack.map((tech, i) => (\n                  <span key={i} className=\"TechTag\">{tech}</span>\n                ))}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AACzB,OAAOC,qBAAqB,MAAM,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAY,GAAG,CACnB;EACEC,KAAK,EAAE,aAAa;EACpBC,WAAW,EAAE,8OAA8O;EAC3PC,QAAQ,EAAEN,qBAAqB;EAAE;EACjCO,OAAO,EAAE,gCAAgC;EACzCC,SAAS,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ;AACpD;AACA;AAAA,CACD;AAED,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC,oBACEP,OAAA;IAASQ,EAAE,EAAC,cAAc;IAACC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBACpDV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBd,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BT,YAAY,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC/BjB,OAAA;QAAKS,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BV,OAAA;UAAGkB,IAAI,EAAEF,OAAO,CAACX,OAAQ;UAACc,MAAM,EAAC,QAAQ;UAACC,GAAG,EAAC,qBAAqB;UAAAV,QAAA,eACjEV,OAAA;YAAKqB,GAAG,EAAEL,OAAO,CAACZ,QAAS;YAACkB,GAAG,EAAE,GAAGN,OAAO,CAACd,KAAK,aAAc;YAACO,SAAS,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACJd,OAAA;UAAKS,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BV,OAAA;YAAAU,QAAA,EAAKM,OAAO,CAACd;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBd,OAAA;YAAKS,SAAS,EAAC,oBAAoB;YAAAC,QAAA,GAAC,GAAC,EAACM,OAAO,CAACb,WAAW;UAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChEd,OAAA;YAAKS,SAAS,EAAC,WAAW;YAAAC,QAAA,EACvBM,OAAO,CAACV,SAAS,CAACS,GAAG,CAAC,CAACQ,IAAI,EAAEC,CAAC,kBAC7BxB,OAAA;cAAcS,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAEa;YAAI,GAA5BC,CAAC;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAkC,CAC/C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAZ0BG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAalC,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd;AAACW,EAAA,GAxBuBlB,QAAQ;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}